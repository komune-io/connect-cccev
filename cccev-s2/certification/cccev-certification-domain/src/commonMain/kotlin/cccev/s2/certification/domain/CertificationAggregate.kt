package cccev.s2.certification.domain

import cccev.s2.certification.domain.command.CertificationAddEvidenceCommand
import cccev.s2.certification.domain.command.CertificationAddRequirementsCommand
import cccev.s2.certification.domain.command.CertificationAddValuesCommand
import cccev.s2.certification.domain.command.CertificationAddedEvidenceEvent
import cccev.s2.certification.domain.command.CertificationAddedRequirementsEvent
import cccev.s2.certification.domain.command.CertificationAddedValuesEvent
import cccev.s2.certification.domain.command.CertificationCreateCommand
import cccev.s2.certification.domain.command.CertificationCreatedEvent
import cccev.s2.certification.domain.command.CertificationRemoveEvidenceCommand
import cccev.s2.certification.domain.command.CertificationRemoveRequirementsCommand
import cccev.s2.certification.domain.command.CertificationRemovedEvidenceEvent
import cccev.s2.certification.domain.command.CertificationRemovedRequirementsEvent

interface CertificationAggregate {
	suspend fun create(command: CertificationCreateCommand): CertificationCreatedEvent
	suspend fun addValues(command: CertificationAddValuesCommand): CertificationAddedValuesEvent
	suspend fun addEvidence(command: CertificationAddEvidenceCommand): CertificationAddedEvidenceEvent
	suspend fun removeEvidence(command: CertificationRemoveEvidenceCommand): CertificationRemovedEvidenceEvent
	suspend fun addRequirements(command: CertificationAddRequirementsCommand): CertificationAddedRequirementsEvent
	suspend fun removeRequirements(command: CertificationRemoveRequirementsCommand): CertificationRemovedRequirementsEvent
}
